{"version":3,"sources":["assets/receipt.png","../node_modules/@material-ui/icons/ZoomIn.js","shared/components/MainElements/DurationSelector.js","receipts/components/ModifyReceipt.js","pages/Receipts.js"],"names":["module","exports","__webpack_require__","p","_interopRequireDefault","Object","defineProperty","value","default","_react","_default","createElement","Fragment","d","useStyles","makeStyles","theme","formControl","position","top","props","concat","right","margin","spacing","minWidth","durations","DurationSelector","getDuration","classes","_useState","useState","_useState2","slicedToArray","duration","setDuration","react_default","a","FormControl","className","InputLabel","id","Select","labelId","name","onChange","e","target","map","index","MenuItem","key","root","height","form","width","marginTop","submit","validationSchema","Yup","shape","required","amount","ModifyReceiptForm","receipt","category","setCategory","_useState3","_useState4","message","_useHttpClient","useHttpClient","isLoading","error","success","sendRequest","clearError","clearSuccess","auth","useContext","AuthContext","_useFormik","useFormik","enableReinitialize","initialValues","date","onSubmit","_onSubmit","asyncToGenerator","regenerator_default","mark","_callee","values","_ref","endpoint","wrap","_context","prev","next","resetForm","process","_id","JSON","stringify","title","Content-Type","Authorization","token","onReceiptUpload","RollbarErrorTracking","logErrorInRollbar","stop","_x","_x2","apply","this","arguments","handleSubmit","handleChange","handleBlur","isValid","ErrorBoundary","ErrorModal","onClear","SuccessModal","successMessage","LoadingSpinner","asOverlay","Grid","container","direction","alignItems","justify","noValidate","item","xs","TextField","fullWidth","defaultValue","label","type","autoComplete","onBlur","autoFocus","FormElements_Select","dvalue","event","slice","Button","variant","color","disabled","_imgContainer","pRel","imgRoot","display","flexDirection","imgContainer","breakpoints","down","& $imgMask","opacity","& $imgIcon","imgBackdrop","transition","transitions","create","imgMask","left","borderRadius","backgroundColor","imgIcon","transform","fontSize","img","getTimezoneOffset","offset","Date","hourOffset","Math","abs","floor","minuteOffset","Receipts","receiptCount","receipts","setReceipts","_useState5","_useState6","isOpen","setIsOpen","_useState7","_useState8","reloadTransactions","_useState9","_useState10","ind","setInd","handleDialogOpen","useEffect","timezone","responseData","sent","t0","fetchReceipts","lg","newDate","picture","length","Receipt","ButtonBase","onClick","src","alt","ZoomIn_default","AppDialog","size","handleOpen","handleClose","ModifyReceipt","reloadTrans"],"mappings":"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","file":"static/js/9.e0ea9107.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/receipt.d2a1ba6b.png\";","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\"\n})), 'ZoomIn');\n\nexports.default = _default;","import React, { useState } from 'react';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        position: 'absolute',\r\n        top: (props) => `${props.top}`,\r\n        right: (props) => `${props.right}`,\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nconst durations = ['all', 'daily', 'weekly', 'monthly', 'annually'];\r\n\r\nexport function DurationSelector(props) {\r\n    const { top, right, getDuration } = props;\r\n    const classes = useStyles({ top, right });\r\n    const [duration, setDuration] = useState('all');\r\n\r\n    const handleChange = (e) => {\r\n        setDuration(e.target.value);\r\n        getDuration(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"durlabel\">Duration</InputLabel>\r\n            <Select\r\n                labelId=\"durlabel\"\r\n                value={duration}\r\n                name=\"Duration\"\r\n                onChange={handleChange}\r\n            >\r\n                {durations.map((duration, index) => {\r\n                    return (\r\n                        <MenuItem key={index} value={duration}>\r\n                            {duration}\r\n                        </MenuItem>\r\n                    );\r\n                })}\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\n\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport SuccessModal from '../../shared/components/UIElements/SuccessModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport CustomSelect from '../../shared/components/FormElements/Select';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport ErrorBoundary from '../../shared/components/UIElements/ErrorBoundary';\r\nimport RollbarErrorTracking from '../../helpers/RollbarErrorTracking';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().required('Name is required'),\r\n    amount: Yup.number().required('Amount is required'),\r\n});\r\n\r\n// const currentDate = () => {\r\n\r\n//     const date = new Date(); // M-D-YYYY\r\n\r\n//     const d = date.getDate();\r\n//     const m = date.getMonth() + 1;\r\n//     const y = date.getFullYear();\r\n\r\n//     return (d <= 9 ? '0' + d : d) + '-' + (m <= 9 ? '0' + m : m) + '-' + y;\r\n// }\r\n\r\nconst ModifyReceiptForm = (props) => {\r\n    const { receipt } = props;\r\n    const classes = useStyles();\r\n    const [category, setCategory] = useState(receipt.category);\r\n    const [message, setMessage] = useState('');\r\n\r\n    const {\r\n        isLoading,\r\n        error,\r\n        success,\r\n        sendRequest,\r\n        clearError,\r\n        clearSuccess,\r\n    } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    function onSelectChange(event) {\r\n        setCategory(event.target.value);\r\n    }\r\n    const { handleSubmit, handleChange, handleBlur, isValid } = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            name: receipt.name,\r\n            amount: receipt.amount,\r\n            category: receipt.category,\r\n            date: receipt.date,\r\n        },\r\n        validationSchema,\r\n        async onSubmit(values, { resetForm }) {\r\n            if (category !== '0') {\r\n                values.category = category;\r\n            }\r\n\r\n            try {\r\n                const endpoint =\r\n                    process.env.REACT_APP_API_BASE_URL +\r\n                    `receipt/${receipt._id}`;\r\n                sendRequest(\r\n                    endpoint,\r\n                    'PUT',\r\n                    JSON.stringify({\r\n                        title: values.name,\r\n                        amount: values.amount,\r\n                        category: values.category,\r\n                        date: values.date,\r\n                    }),\r\n                    {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: 'Bearer ' + auth.token,\r\n                    }\r\n                );\r\n\r\n                props.onReceiptUpload();\r\n            } catch (error) {\r\n                RollbarErrorTracking.logErrorInRollbar(error);\r\n                //alert('ERROR ' + JSON.stringify(error));\r\n            }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <ErrorBoundary>\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <SuccessModal\r\n                success={success}\r\n                successMessage={message}\r\n                onClear={clearSuccess}\r\n            />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n            <Grid\r\n                container\r\n                spacing={5}\r\n                margin={3}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n            >\r\n                <form onSubmit={handleSubmit} noValidate>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            fullWidth\r\n                            defaultValue={receipt.title}\r\n                            id=\"name\"\r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            type=\"text\"\r\n                            autoComplete=\"name\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            autoFocus\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            fullWidth\r\n                            defaultValue={receipt.amount}\r\n                            id=\"amount\"\r\n                            label=\"Amount\"\r\n                            name=\"amount\"\r\n                            type=\"number\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <p><b>Current category: {receipt.category}</b></p>\r\n                        <CustomSelect\r\n                            name=\"category\"\r\n                            id=\"category\"\r\n                            title=\"Category\"\r\n                            dvalue={receipt.category}\r\n                            handleChange={onSelectChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            fullWidth\r\n                            defaultValue={receipt.date.slice(0, 10)}\r\n                            id=\"date\"\r\n                            label=\"Date\"\r\n                            name=\"date\"\r\n                            type=\"text\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        disabled={!isValid}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </form>\r\n            </Grid>\r\n        </React.Fragment>\r\n        </ErrorBoundary>\r\n    );\r\n};\r\n\r\nexport default ModifyReceiptForm;\r\n","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport AppDialog from '../shared/components/UIElements/AppDialog';\r\n\r\nimport Receipt from '../assets/receipt.png';\r\n\r\nimport { DurationSelector } from '../shared/components/MainElements/DurationSelector';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { useHttpClient } from '../shared/hooks/http-hook';\r\nimport { AuthContext } from '../shared/context/auth-context';\r\n\r\nimport ModifyReceipt from '../receipts/components/ModifyReceipt';\r\nimport ErrorBoundary from '../shared/components/UIElements/ErrorBoundary';\r\nimport RollbarErrorTracking from '../helpers/RollbarErrorTracking';\r\n\r\nconst imgSize = '15rem';\r\nconst imgSizeXs = '18rem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pRel: {\r\n        position: 'relative',\r\n    },\r\n    imgRoot: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    imgContainer: {\r\n        width: imgSize,\r\n        height: imgSize,\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: imgSizeXs,\r\n            height: imgSizeXs,\r\n        },\r\n        '&:hover': {\r\n            '& $imgMask': {\r\n                opacity: 0.6,\r\n            },\r\n            '& $imgIcon': {\r\n                opacity: 1,\r\n            },\r\n        },\r\n    },\r\n    imgBackdrop: {\r\n        position: 'absolute',\r\n        opacity: 0,\r\n        transition: theme.transitions.create('opacity'),\r\n    },\r\n    imgMask: {\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: '0.8rem',\r\n        backgroundColor: '#314f85',\r\n    },\r\n    imgIcon: {\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        color: '#fafafa',\r\n        fontSize: '2rem',\r\n    },\r\n    img: {\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: '0.8rem',\r\n    },\r\n}));\r\n\r\n// Get timezone offset of the user's current location, format: +HHmm or -HHmm\r\n// Aware that in mongoDB the +/- is reversed from JavaScript\r\nconst getTimezoneOffset = () => {\r\n    const offset = new Date().getTimezoneOffset();\r\n    const hourOffset = Math.abs(Math.floor(offset / 60));\r\n    const minuteOffset = Math.abs(offset % 60);\r\n    const timezoneOffset = `${offset > 0 ? '-' : '+'}${\r\n        hourOffset > 9 ? hourOffset : '0' + hourOffset\r\n    }${minuteOffset > 9 ? minuteOffset : '0' + minuteOffset}`;\r\n    return timezoneOffset;\r\n};\r\n\r\nexport default function Receipts(props) {\r\n    const classes = useStyles();\r\n    const auth = useContext(AuthContext);\r\n    const { sendRequest } = useHttpClient();\r\n    // const userId = auth.userId;\r\n\r\n    const { receiptCount, onReceiptUpload } = props;\r\n\r\n    const [receipts, setReceipts] = useState([]);\r\n    const [duration, setDuration] = useState('all');\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [reloadTransactions, setReloadTransactions] = useState(false);\r\n\r\n    const [ind, setInd] = useState(null);\r\n\r\n    const getDuration = (duration) => {\r\n        setDuration(duration);\r\n    };\r\n\r\n    const handleDialogOpen = (index) => {\r\n        //set receipt\r\n        setInd(index);\r\n        setIsOpen(true);\r\n    };\r\n    const handleDialogClose = () => {\r\n        setIsOpen(false);\r\n    };\r\n    const handleReceiptUpload = () => {\r\n        props.onReceiptUpload();\r\n        setIsOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchReceipts = async () => {\r\n            try {\r\n                const timezone = getTimezoneOffset();\r\n                const endpoint =\r\n                    process.env.REACT_APP_API_BASE_URL +\r\n                    `user/receipts/${duration}&${timezone}`;\r\n                const responseData = await sendRequest(endpoint, 'GET', null, {\r\n                    Authorization: 'Bearer ' + auth.token,\r\n                });\r\n\r\n                setReceipts(responseData);\r\n            } catch (error) {\r\n                RollbarErrorTracking.logErrorInRollbar(error);\r\n\r\n            }\r\n        };\r\n\r\n        fetchReceipts();\r\n    }, [auth.token, sendRequest, duration, receiptCount]);\r\n\r\n    return (\r\n        <ErrorBoundary>\r\n        <Grid container spacing={2} xs={12} lg={10} className={classes.pRel}>\r\n            <DurationSelector top=\"-4rem\" right=\"0\" getDuration={getDuration} />\r\n            {receipts.map((receipt, index) => {\r\n                const { date } = receipt;\r\n                const newDate = date.slice(0, 10);\r\n                // if no pic, use dummy pic\r\n                const picture =\r\n                    receipt.picture.length > 0 ? receipt.picture[0] : Receipt;\r\n\r\n                return (\r\n                    <Grid\r\n                        item\r\n                        xs\r\n                        key={index + '-' + newDate}\r\n                        className={classes.imgRoot}\r\n                    >\r\n                        <ButtonBase\r\n                            className={classes.imgContainer}\r\n                            onClick={() => handleDialogOpen(index)}\r\n                        >\r\n                            <img\r\n                                src={picture}\r\n                                alt={`Receipt on ${newDate}`}\r\n                                className={classes.img}\r\n                            />\r\n                            <span\r\n                                className={`${classes.imgBackdrop} ${classes.imgMask}`}\r\n                            />\r\n                            <ZoomInIcon\r\n                                className={`${classes.imgBackdrop} ${classes.imgIcon}`}\r\n                            />\r\n                        </ButtonBase>\r\n                        <p>{newDate}</p>\r\n                    </Grid>\r\n                );\r\n            })}\r\n\r\n            <AppDialog\r\n                size=\"md\"\r\n                isOpen={isOpen}\r\n                handleOpen={handleDialogOpen}\r\n                handleClose={handleDialogClose}\r\n                title=\"Modify Receipt\"\r\n            >\r\n                <ModifyReceipt\r\n                    receipt={receipts[ind]}\r\n                    reloadTrans={reloadTransactions}\r\n                    onReceiptUpload={handleReceiptUpload}\r\n                />\r\n            </AppDialog>\r\n        </Grid>\r\n        </ErrorBoundary>\r\n    );\r\n}\r\n"],"sourceRoot":""}
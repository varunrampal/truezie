{"version":3,"sources":["shared/context/category-context.js","shared/components/UIElements/AppDialog.js","shared/components/FormElements/Select.js","assets/user.png","shared/components/HeaderElements/TopBar.js","shared/components/HeaderElements/SideBar.js","shared/components/HeaderElements/NavTabs.js","shared/components/HeaderElements/UploadReceiptBtn.js","shared/components/HeaderElements/ProfileAvatar.js","shared/components/HeaderElements/MenuBtn.js","receipts/components/ReceiptUpload.js","shared/components/HeaderElements/Header.js","themes/theme.js","pages/Home.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_icons_FastfoodRounded__WEBPACK_IMPORTED_MODULE_1__","_material_ui_icons_FastfoodRounded__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_icons_LocalGroceryStoreRounded__WEBPACK_IMPORTED_MODULE_2__","_material_ui_icons_LocalGroceryStoreRounded__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_icons_HelpOutlineRounded__WEBPACK_IMPORTED_MODULE_3__","_material_ui_icons_HelpOutlineRounded__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_icons_DriveEtaRounded__WEBPACK_IMPORTED_MODULE_4__","_material_ui_icons_DriveEtaRounded__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_icons_SportsHandballRounded__WEBPACK_IMPORTED_MODULE_5__","_material_ui_icons_SportsHandballRounded__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_icons_LocalHospitalRounded__WEBPACK_IMPORTED_MODULE_6__","_material_ui_icons_LocalHospitalRounded__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_HomeRounded__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons_HomeRounded__WEBPACK_IMPORTED_MODULE_7___default","categoryHash","Food & Drinks","a","createElement","Housing","Transportation","Health Care","Recreation & Entertainment","Grocery","Other","CategoryContext","createContext","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_6__","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_7___default","useStyles","makeStyles","theme","closeButton","position","right","spacing","top","color","palette","grey","AppDialog","_ref","isOpen","size","handleClose","title","subtitle","children","classes","id","fullWidth","maxWidth","open","onClose","aria-labelledby","aria-label","className","onClick","dividers","_context_category_context__WEBPACK_IMPORTED_MODULE_1__","CustomSelect","props","dvalue","useContext","options","Object","keys","map","category","key","value","defaultValue","name","onChange","handleChange","module","exports","p","appBar","defineProperty","breakpoints","up","width","drawerWidth","concat","marginLeft","_ref2","toolbar","display","justifyContent","backgroundColor","TopBar","react_default","AppBar","Toolbar","drawer","flexShrink","utilbar","objectSpread","mixins","opacity","drawerPaper","SideBar","isMobile","useMediaQuery","useTheme","down","Drawer","assign","paper","variant","ModalProps","keepMounted","BackdropProps","invisible","hidden","visibility","tabs","marginTop","tabRoot","margin","borderRadius","minHeight","textTransform","tabWrapper","flexDirection","alignItems","tabIcon","marginRight","marginBottom","fontSize","btnOnfocus","NavTabs","Tabs","orientation","indicator","tab","Tab","component","Link","to","toLowerCase","icon","FiberManualRecord_default","label","root","wrapper","selected","_btnLoginUpload","btnLoginUpload","height","borderColor","UploadReceiptBtn","IconButton","Receipt_default","Button","container","avatar","text","ProfileAvatar","_React$useState","React","useState","_React$useState2","slicedToArray","setOpen","anchorRef","useRef","auth","AuthContext","event","current","contains","target","handleListKeyDown","preventDefault","prevOpen","useEffect","focus","Avatar","alt","src","User","isLoggedIn","ref","aria-controls","undefined","aria-haspopup","userName","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","logout","menuButton","cursor","MenuBtn","Hidden","smUp","logo","form","dropzone","submit","validationSchema","Yup","shape","amount","required","ReceiptUploadForm","_useState","_useState2","setCategory","_useState3","_useState4","message","setMessage","_useState5","_useState6","images","setImages","_useState7","_useState8","setGoogleResponse","_useState9","_useState10","setGoogleResponseText","_useState11","_useState12","setTitle","_useHttpClient","useHttpClient","isLoading","error","success","sendRequest","clearError","clearSuccess","_useFormik","useFormik","initialValues","onSubmit","_onSubmit","asyncToGenerator","regenerator_default","mark","_callee2","values","imagesUrl","wrap","_context2","prev","next","resetForm","length","forEach","_callee","image","fileName","fileType","_context","split","process","JSON","stringify","userId","Content-Type","then","resp","console","log","signedRequest","url","push","user","date","Date","picture","Authorization","token","onReceiptUpload","t0","RollbarErrorTracking","logErrorInRollbar","stop","_x3","apply","this","arguments","err","_x","_x2","handleSubmit","handleBlur","errors","touched","isValid","ErrorBoundary","Fragment","ErrorModal","onClear","SuccessModal","successMessage","LoadingSpinner","asOverlay","Grid","direction","justify","noValidate","item","xs","TextField","type","autoComplete","e","helperText","Boolean","autoFocus","onBlur","Select","index_es","acceptedFiles","dropzoneText","files","formData","FormData","append","response","base64String","results","base64","googleEndPoint","REACT_APP_GOOGLE_VISION_API_ENDPOINT","body","requests","features","maxResults","content","Accept","responseJson","data","words","responses","textAnnotations","arrayWords","description","logoContainer","left","Header","mobileOpen","setMobileOpen","setIsOpen","reloadTransactions","handleDrawerToggle","handleDialogOpen","Logo","logoStyle","page","handleOpen","ReceiptUpload","reloadTrans","createMuiTheme","MuiButtonBase","disableRipple","typography","fontFamily","fontWeightRegular","fontWeightLight","fontWeightMedium","Dashboard","lazy","Promise","all","bind","Receipts","Reports","utilbarMain","main","flexGrow","padding","overflowX","maxHeight","Home","setPage","receiptCount","setReceiptCount","handleReceiptUpload","pages","react_router_dom","Box","CssBaseline","ThemeProvider","lg","react_router","Suspense","fallback","index","exact","path"],"mappings":"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","file":"static/js/6.054c898a.chunk.js","sourcesContent":["import React, { createContext } from 'react';\r\n\r\nimport FastfoodRoundedIcon from '@material-ui/icons/FastfoodRounded';\r\nimport LocalGroceryStoreRoundedIcon from '@material-ui/icons/LocalGroceryStoreRounded';\r\nimport HelpOutlineRoundedIcon from '@material-ui/icons/HelpOutlineRounded';\r\nimport DriveEtaRoundedIcon from '@material-ui/icons/DriveEtaRounded';\r\nimport SportsHandballRoundedIcon from '@material-ui/icons/SportsHandballRounded';\r\nimport LocalHospitalRoundedIcon from '@material-ui/icons/LocalHospitalRounded';\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\n\r\nconst categoryHash = {\r\n  'Food & Drinks': <FastfoodRoundedIcon />,\r\n  'Housing': <HomeRoundedIcon />,\r\n  'Transportation': <DriveEtaRoundedIcon />,\r\n  'Health Care': <LocalHospitalRoundedIcon />,\r\n  'Recreation & Entertainment': <SportsHandballRoundedIcon />,\r\n  'Grocery': <LocalGroceryStoreRoundedIcon />,\r\n  'Other': <HelpOutlineRoundedIcon />\r\n}\r\n\r\nconst CategoryContext = createContext(categoryHash);\r\n\r\nexport default CategoryContext;","import React from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n}));\r\n\r\nconst AppDialog = ({\r\n    isOpen,\r\n    size,\r\n    handleClose,\r\n    title,\r\n    subtitle,\r\n    children,\r\n}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                id=\"appDialog\"\r\n                fullWidth\r\n                maxWidth={size}\r\n                open={isOpen}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"appDialog\"\r\n            >\r\n                <DialogTitle>\r\n                    {title}\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        className={classes.closeButton}\r\n                        onClick={handleClose}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    <DialogContentText>{subtitle}</DialogContentText>\r\n                    {children}\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\nexport default AppDialog;\r\n","import React, { useContext } from 'react';\r\n\r\nimport CategoryContext from '../../context/category-context';\r\n\r\nimport './Select.css';\r\n\r\nfunction CustomSelect(props) {\r\n    const { dvalue } = props;\r\n    const categoryHash = useContext(CategoryContext);\r\n\r\n    const options = Object.keys(categoryHash).map(category => (\r\n        <option key={category} value={category}>\r\n            {category}\r\n        </option>\r\n    ));\r\n\r\n    return (\r\n        <select\r\n            className=\"select-text\"\r\n            defaultValue={dvalue}\r\n            id=\"category\"\r\n            name=\"category\"\r\n            onChange={props.handleChange}\r\n        >\r\n            <option value=\"0\">Select Category</option>\r\n            {options}\r\n        </select>\r\n    );\r\n}\r\nexport default CustomSelect;\r\n","module.exports = __webpack_public_path__ + \"static/media/user.d3303ad0.png\";","import React from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: ({ drawerWidth }) => `calc(100% - ${drawerWidth})`,\r\n      marginLeft: ({ drawerWidth }) => drawerWidth\r\n    }\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    backgroundColor: '#fafafa',\r\n    color: 'initial'\r\n  }\r\n}));\r\n\r\nexport function TopBar(props) {\r\n  const { drawerWidth, children } = props;\r\n  const classes = useStyles({ drawerWidth });\r\n  return (\r\n    <AppBar className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        {children}\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: ({ drawerWidth }) => drawerWidth,\r\n      flexShrink: 0\r\n    }\r\n  },\r\n  utilbar: {\r\n    ...theme.mixins.toolbar,\r\n    backgroundColor: '#314f85',\r\n    opacity: 0.4,\r\n  },\r\n  drawerPaper: {\r\n    width: ({ drawerWidth }) => drawerWidth,\r\n    backgroundColor: '#1b3460',\r\n    color: '#fafafa'\r\n  }\r\n}));\r\n\r\nexport function SideBar(props) {\r\n  const { drawerWidth, open, onClose, children } = props;\r\n  const classes = useStyles({ drawerWidth });\r\n\r\n  const isMobile = useMediaQuery(useTheme().breakpoints.down('xs'));\r\n\r\n  return (\r\n    <nav className={classes.drawer}>\r\n      <Drawer\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n        {...(isMobile ? {\r\n          variant: \"temporary\",\r\n          ModalProps: {\r\n            keepMounted: true,\r\n            BackdropProps: {\r\n              invisible: true\r\n            }\r\n          },\r\n          open,\r\n          onClose\r\n        } : {\r\n            variant: \"permanent\",\r\n            open: true\r\n          }\r\n        )}\r\n      >\r\n        <div className={classes.utilbar}></div>\r\n        {children}\r\n      </Drawer>\r\n    </nav>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  hidden: {\r\n    display: 'none'\r\n  },\r\n  invisible: {\r\n    visibility: 'hidden'\r\n  },\r\n  tabs: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  tabRoot: {\r\n    width: '70%',\r\n    margin: '0.4rem auto',\r\n    borderRadius: '0.5rem',\r\n    minHeight: '2rem',\r\n    textTransform: 'none'\r\n  },\r\n  tabWrapper: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'normal',\r\n    alignItems: 'baseline'\r\n  },\r\n  tabIcon: {\r\n    marginRight: '1rem',\r\n    marginBottom: 0,\r\n    fontSize: '0.7rem'\r\n  },\r\n  btnOnfocus: {\r\n    backgroundColor: '#4366a7',\r\n    color: '#38cc89'\r\n  },\r\n}));\r\n\r\nexport function NavTabs(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Tabs\r\n      orientation=\"vertical\"\r\n      className={classes.tabs}\r\n      classes={{\r\n        indicator: classes.hidden\r\n      }}\r\n      {...props}\r\n    >\r\n      {['Dashboard', 'Reports', 'Receipts'].map(tab => {\r\n        return (\r\n          <Tab\r\n            key={tab}\r\n            component={Link}\r\n            to={`/${tab.toLowerCase()}`}\r\n            icon={\r\n              <FiberManualRecordIcon className={\r\n                `${classes.tabIcon} ${tab === props.value || classes.invisible}`\r\n              } />\r\n            }\r\n            label={tab}\r\n            value={tab}\r\n            classes={{\r\n              root: classes.tabRoot,\r\n              wrapper: classes.tabWrapper,\r\n              selected: classes.btnOnfocus\r\n            }}\r\n          />\r\n        )\r\n      })}\r\n    </Tabs>\r\n  )\r\n}","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  btnLoginUpload: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: '9rem',\r\n      height: '2.5rem',\r\n      color: '#38cc89',\r\n      borderColor: '#38cc89',\r\n      textTransform: 'none'\r\n    },\r\n    color: '#38cc89'\r\n  }\r\n}));\r\n\r\nexport function UploadReceiptBtn(props) {\r\n  const classes = useStyles();\r\n  const isMobile = useMediaQuery(useTheme().breakpoints.down('xs'));\r\n\r\n  return (\r\n    isMobile ?\r\n      (\r\n        <IconButton>\r\n          <ReceiptIcon className={classes.btnLoginUpload} {...props} />\r\n        </IconButton>\r\n      ) : (\r\n        <Button variant=\"outlined\" className={classes.btnLoginUpload} {...props}>{props.children}</Button>\r\n      )\r\n  )\r\n}","import React, {useContext} from 'react';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport User from '../../../assets/user.png';\r\nimport { AuthContext } from '../../context/auth-context';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    margin: '0 2rem',\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      margin: 0\r\n    }\r\n  },\r\n  avatar: {\r\n    marginRight: '1rem'\r\n  },\r\n  text: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: 'none'\r\n    }\r\n  }\r\n}))\r\n\r\nexport function ProfileAvatar(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const auth = useContext(AuthContext);\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open])\r\n  return (\r\n    <div className={classes.container}>\r\n      <Avatar alt=\"User Avatar\" src={User} className={classes.avatar} />\r\n      {/* <div className={classes.text}>Profile</div>    */}\r\n      {auth.isLoggedIn && (\r\n      <div>\r\n        <Button\r\n          ref={anchorRef}\r\n          aria-controls={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n        >\r\n        {auth.userName}\r\n        </Button>\r\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                    <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                    <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                    <MenuItem onClick={auth.logout}>Logout</MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>)}\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\n\r\nimport { Hidden } from \"@material-ui/core\";\r\n\r\nimport logo from '../../../assets/logo.png';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  menuButton: {\r\n    width: '2rem',\r\n    marginLeft: '0.8rem',\r\n    marginRight: 'auto',\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n  }\r\n})\r\n\r\nexport function MenuBtn(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Hidden smUp>\r\n      <img\r\n        src={logo}\r\n        alt=\"logo\"\r\n        className={classes.menuButton}\r\n        {...props}\r\n      />\r\n    </Hidden>\r\n  )\r\n}","import React, { useState, useContext } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\n\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport SuccessModal from '../../shared/components/UIElements/SuccessModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport CustomSelect from '../../shared/components/FormElements/Select';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport ErrorBoundary from '../../shared/components/UIElements/ErrorBoundary';\r\nimport RollbarErrorTracking from '../../helpers/RollbarErrorTracking';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        marginTop: theme.spacing(1),\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '90%'\r\n        }\r\n    },\r\n    dropzone: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            minHeight: '12rem'\r\n        }\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    //  name: Yup.string().required('Name is required'),\r\n    amount: Yup.number().required('Amount is required'),\r\n});\r\n\r\n\r\nconst ReceiptUploadForm = (props) => {\r\n    const classes = useStyles();\r\n    const [category, setCategory] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [googleResponse, setGoogleResponse] = useState('');\r\n    const [googleResponseText, setGoogleResponseText] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n\r\n    const {\r\n        isLoading,\r\n        error,\r\n        success,\r\n        sendRequest,\r\n        clearError,\r\n        clearSuccess,\r\n    } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const onSelectChange = (event) => {\r\n        setCategory(event.target.value);\r\n    };\r\n\r\n    const _handleTitleTextFieldChange = (e) => {\r\n        setTitle(e.target.value);\r\n    };\r\n\r\n    const handleChangeDropzone = (files) => {\r\n        setImages(files);\r\n\r\n        if (files.length === 1) {\r\n            //send request to API to get base64 string of image\r\n            const formData = new FormData();\r\n            formData.append('photo', files[0]);\r\n\r\n            const endpoint =\r\n                process.env.REACT_APP_API_BASE_URL +\r\n                'user/base64';\r\n\r\n            // request sent to API\r\n            sendRequest(\r\n                endpoint,\r\n                'POST',\r\n                formData\r\n            ).then((response) => {\r\n\r\n                const base64String = response.results.base64; // base64 string of image received\r\n\r\n                //Google API end point\r\n                const googleEndPoint = process.env.REACT_APP_GOOGLE_VISION_API_ENDPOINT;\r\n\r\n                let body = JSON.stringify({\r\n                    requests: [\r\n                        {\r\n                            features: [\r\n                                {\r\n                                    type:\r\n                                        'TEXT_DETECTION',\r\n                                    maxResults: 5,\r\n                                },\r\n                            ],\r\n                            image: {\r\n                                content: base64String,\r\n                            },\r\n                        },\r\n                    ],\r\n                });\r\n\r\n                //Send request to google API\r\n                sendRequest(\r\n                    googleEndPoint,\r\n                    'POST',\r\n                    body,\r\n                    {\r\n                        Accept: 'application/json',\r\n                        'Content-Type':\r\n                            'application/json',\r\n                    }\r\n                ).then((responseJson) => {\r\n\r\n                    setGoogleResponse(responseJson);\r\n\r\n                    if (JSON.stringify(responseJson.data) !== '{}') {\r\n                        const words =\r\n                            responseJson.responses[0]\r\n                                .textAnnotations;\r\n\r\n                        let arrayWords = [];\r\n\r\n                        let document = '';\r\n                        words.forEach((text) => {\r\n                            document +=\r\n                                text.description;\r\n                            arrayWords.push(text.description);\r\n                        });\r\n\r\n                        //console.log(arrayWords);\r\n\r\n                        setGoogleResponseText(arrayWords);\r\n                        setTitle(arrayWords[1]);\r\n                        // console.log(document);\r\n                    } else {\r\n                        console.log(\r\n                            'No discernable text found.'\r\n                        );\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    const {\r\n        handleSubmit,\r\n        handleChange,\r\n        handleBlur,\r\n        errors,\r\n        touched,\r\n        isValid,\r\n    } = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            amount: '',\r\n            category: '',\r\n        },\r\n        validationSchema,\r\n        async onSubmit(values, { resetForm }) {\r\n\r\n            values.name = title;\r\n\r\n            const imagesUrl = [];\r\n            if (category !== '0') {\r\n                values.category = category;\r\n            }\r\n\r\n            try {\r\n                //upload the images to S3\r\n                if (images.length > 0) {\r\n                    images.forEach(async (image) => {\r\n                        let fileName = image.name.split('.')[0];\r\n                        let fileType = image.name.split('.')[1];\r\n\r\n                        try {\r\n\r\n                            const endpoint = process.env.REACT_APP_API_BASE_URL + 'sign_s3/';\r\n                            await sendRequest(\r\n                                endpoint,\r\n                                'POST',\r\n                                JSON.stringify({\r\n                                    fileName: fileName,\r\n                                    fileType: fileType,\r\n                                    userId: auth.userId,\r\n                                }),\r\n                                {\r\n                                    'Content-Type': 'application/json',\r\n                                }\r\n                            ).then((resp) => {\r\n                                console.log(resp);\r\n                                const signedRequest = resp.signedRequest;\r\n                                const url = resp.url;\r\n\r\n                                sendRequest(\r\n                                    signedRequest,\r\n                                    'PUT',\r\n                                    image,\r\n                                    {\r\n                                        'Content-Type': fileType,\r\n                                    },\r\n                                    false\r\n                                ).then(() => {\r\n                                    imagesUrl.push(url);\r\n\r\n                                    if (imagesUrl.length === images.length) {\r\n                                        console.log('making call to get save receipt');\r\n                                        const endpoint =\r\n                                            process.env.REACT_APP_API_BASE_URL +\r\n                                            'receipt';\r\n                                        sendRequest(\r\n                                            endpoint,\r\n                                            'POST',\r\n                                            JSON.stringify({\r\n                                                title: values.name,\r\n                                                user: auth.userId,\r\n                                                amount: values.amount,\r\n                                                category: values.category,\r\n                                                date: new Date(),\r\n                                                picture: imagesUrl,\r\n                                            }),\r\n                                            {\r\n                                                'Content-Type': 'application/json',\r\n                                                Authorization:\r\n                                                    'Bearer ' + auth.token,\r\n                                            }\r\n                                        );\r\n                                        props.onReceiptUpload();\r\n                                        setMessage(\r\n                                            'Receipt uploaded successfully!'\r\n                                        );\r\n                                    }\r\n\r\n\r\n                                });\r\n\r\n                            });\r\n\r\n                        } catch (error) {\r\n                            //console.log('ERROR ' + JSON.stringify(error));\r\n                            RollbarErrorTracking.logErrorInRollbar(error);\r\n                        }\r\n                    });\r\n                }\r\n                //resetForm({values: ''});\r\n            } catch (err) {\r\n                RollbarErrorTracking.logErrorInRollbar(err);\r\n\r\n            }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <ErrorBoundary>\r\n            <React.Fragment>\r\n                <ErrorModal error={error} onClear={clearError} />\r\n                {message !== '' &&\r\n                    <SuccessModal\r\n                        success={success}\r\n                        successMessage={message}\r\n                        onClear={clearSuccess}\r\n                    />\r\n                }\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n                <Grid\r\n                    container\r\n                    spacing={5}\r\n                    margin={3}\r\n                    direction=\"column\"\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                >\r\n                    <form\r\n                        noValidate\r\n                        className={classes.form}\r\n                        onSubmit={handleSubmit}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                id=\"name\"\r\n                                label=\"Name\"\r\n                                name=\"name\"\r\n                                type=\"text\"\r\n                                value={title}\r\n                                autoComplete=\"name\"\r\n                                onChange={_handleTitleTextFieldChange}\r\n                                helperText={touched.name ? errors.name : ''}\r\n                                error={touched.name && Boolean(errors.name)}\r\n                                autoFocus\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                id=\"amount\"\r\n                                label=\"Amount\"\r\n                                name=\"amount\"\r\n                                type=\"number\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                helperText={touched.amount ? errors.amount : ''}\r\n                                error={touched.amount && Boolean(errors.amount)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <CustomSelect\r\n                                name=\"category\"\r\n                                id=\"category\"\r\n                                title=\"Category\"\r\n                                handleChange={onSelectChange}\r\n                                helperText={touched.category ? errors.category : ''}\r\n                                error={touched.category && errors.category}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <DropzoneArea\r\n                                classes={{\r\n                                    root: classes.dropzone\r\n                                }}\r\n                                acceptedFiles={['image/*']}\r\n                                dropzoneText=\"Drag and drop an image here or click\"\r\n                                onChange={handleChangeDropzone}\r\n                            />\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        // disabled={!isValid}\r\n                        >\r\n                            Save\r\n                    </Button>\r\n                    </form>\r\n                </Grid>\r\n            </React.Fragment>\r\n        </ErrorBoundary>\r\n    );\r\n};\r\n\r\nexport default ReceiptUploadForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { TopBar } from './TopBar';\r\nimport { SideBar } from './SideBar';\r\nimport { NavTabs } from './NavTabs';\r\nimport { UploadReceiptBtn } from './UploadReceiptBtn';\r\nimport { ProfileAvatar } from './ProfileAvatar';\r\nimport { MenuBtn } from './MenuBtn';\r\nimport { Logo } from '../UIElements/Logo';\r\n\r\nimport AppDialog from '../UIElements/AppDialog.js';\r\nimport ReceiptUploadForm from '../../../receipts/components/ReceiptUpload';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ErrorBoundary from '../../../shared/components/UIElements/ErrorBoundary';\r\n\r\nconst drawerWidth = \"15rem\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  logoContainer: {\r\n    ...theme.mixins.toolbar,\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    margin: 0\r\n  },\r\n  logo: {\r\n    width: '15%',\r\n    marginRight: '2rem'\r\n  }\r\n}));\r\n\r\nexport function Header(props) {\r\n  const classes = useStyles();\r\n \r\n  const isMobile = useMediaQuery(useTheme().breakpoints.down('xs'));\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [reloadTransactions, setReloadTransactions] = useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  }\r\n  const handleDialogOpen = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const handleDialogClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n  const handleReceiptUpload = () => {\r\n    props.onReceiptUpload();\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n    <header>\r\n      <TopBar drawerWidth={drawerWidth}>\r\n        <MenuBtn onClick={handleDrawerToggle} />\r\n        <UploadReceiptBtn onClick={handleDialogOpen}>Upload Receipt</UploadReceiptBtn>\r\n        <ProfileAvatar/>\r\n      </TopBar>\r\n      <SideBar\r\n        drawerWidth={drawerWidth}\r\n        open={mobileOpen}\r\n        onClose={handleDrawerToggle}\r\n      >\r\n        <Logo title logoStyle={classes} />\r\n        <NavTabs\r\n          value={props.page}\r\n          onChange={props.onChange}\r\n          onClick={isMobile ? handleDrawerToggle : null}\r\n        />\r\n      </SideBar>\r\n      <AppDialog\r\n        size=\"md\"\r\n        isOpen={isOpen}\r\n        handleOpen={handleDialogOpen}\r\n        handleClose={handleDialogClose}\r\n        title='Upload receipt'\r\n      >\r\n        <ReceiptUploadForm\r\n          reloadTrans={reloadTransactions}\r\n          onReceiptUpload={handleReceiptUpload}\r\n        />\r\n      </AppDialog>\r\n    </header >\r\n    </ErrorBoundary>\r\n  )\r\n}","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n  props: {\r\n    MuiButtonBase: {\r\n      disableRipple: true\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: '\"Montserrat\", sans-serif',\r\n    fontWeightRegular: 600,\r\n    fontWeightLight: 400,\r\n    fontWeightMedium: 400\r\n  }\r\n});","import React, { useState } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport { Header } from '../shared/components/HeaderElements/Header';\r\nimport ErrorModal from '../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../shared/hooks/http-hook';\r\nimport { theme } from '../themes/theme';\r\nimport ErrorBoundary from '../shared/components/UIElements/ErrorBoundary';\r\n\r\n//Lazy loading or code splitting\r\nconst Dashboard = React.lazy(() => import('./Dashboard'));\r\nconst Receipts = React.lazy(() => import('./Receipts'));\r\nconst Reports = React.lazy(() => import('./Reports'));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    utilbar: {\r\n        ...theme.mixins.toolbar,\r\n        backgroundColor: '#314f85',\r\n        opacity: 0.4,\r\n    },\r\n    utilbarMain: {\r\n        backgroundColor: '#fafafa',\r\n    },\r\n    main: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        flexGrow: 1,\r\n        minHeight: '100vh',\r\n        padding: theme.spacing(3),\r\n        overflowX: 'hidden',\r\n        backgroundColor: '#fafbff',\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginTop: '3rem',\r\n            padding: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        maxHeight: '5.5rem',\r\n    },\r\n}));\r\n\r\nexport default function Home(props) {\r\n    const classes = useStyles();\r\n    const { isLoading, error, clearError } = useHttpClient();\r\n    const [page, setPage] = useState('Dashboard');\r\n    const [receiptCount, setReceiptCount] = useState(0);\r\n\r\n    const handleReceiptUpload = () => {\r\n        setReceiptCount(receiptCount + 1);\r\n\r\n        // const currState =  reloadTransactions === false ? true: reloadTransactions;\r\n        //setReloadTransactions(currState);\r\n    };\r\n    const handleChange = (e, page) => {\r\n        setPage(page);\r\n    };\r\n\r\n    const pages = [\r\n        {\r\n            name: 'Dashboard',\r\n            component: <Dashboard receiptCount={receiptCount} />,\r\n        },\r\n        { name: 'Reports', component: <Reports receiptCount={receiptCount} /> },\r\n        {\r\n            name: 'Receipts',\r\n            component: (\r\n                <Receipts\r\n                    receiptCount={receiptCount}\r\n                    onReceiptUpload={handleReceiptUpload}\r\n                />\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <ErrorBoundary>\r\n        <Router>\r\n            <Box display=\"flex\">\r\n                <CssBaseline />\r\n                <ThemeProvider theme={theme}>\r\n                    <Header\r\n                        page={page}\r\n                        onChange={handleChange}\r\n                        onReceiptUpload={handleReceiptUpload}\r\n                    />\r\n                    <main className={classes.main}>\r\n                        <ErrorModal error={error} onClear={clearError} />\r\n                        {isLoading && <LoadingSpinner asOverlay />}\r\n                        <div\r\n                            className={`${classes.utilbar} ${classes.utilbarMain}`}\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            spacing={3}\r\n                            xs={12}\r\n                            lg={10}\r\n                            classes={{ container: classes.title }}\r\n                        >\r\n                            <Grid item xs={12}>\r\n                                <h2>{page}</h2>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Switch>\r\n                            <React.Suspense\r\n                                fallback={\r\n                                    <div className=\"center\">\r\n                                        <LoadingSpinner\r\n                                            asOverlay\r\n                                        ></LoadingSpinner>\r\n                                    </div>\r\n                                }\r\n                            >\r\n                                {pages.map((page, index) => {\r\n                                    const { name, component } = page;\r\n                                    return (\r\n                                        <Route\r\n                                            exact\r\n                                            path={`/${name.toLowerCase()}`}\r\n                                            key={name}\r\n                                        >\r\n                                            {component}\r\n                                        </Route>\r\n                                    );\r\n                                })}\r\n                            </React.Suspense>\r\n                        </Switch>\r\n                    </main>\r\n                </ThemeProvider>\r\n            </Box>\r\n        </Router>\r\n        </ErrorBoundary>\r\n    );\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["shared/components/MainElements/Panel.js","shared/components/MainElements/DateSelector.js","shared/components/MainElements/TotalExpense.js","pages/Reports.js"],"names":["__webpack_require__","d","__webpack_exports__","Panel","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_paper__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_2__","useStyles","makeStyles","container","position","padding","height","_ref","borderRadius","title","fontSize","color","props","classes","a","createElement","className","children","DateSelector","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Select__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_ListSubheader__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_5__","theme","formControl","top","concat","right","margin","spacing","minWidth","textAlign","value","onChange","txtExpensesTotal","float","Object","D_Projects_TrueZie_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","left","breakpoints","down","TotalExpense","total","react__WEBPACK_IMPORTED_MODULE_1___default","toLocaleString","pRel","whiteSpace","button","D_Projects_TrueZie_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","textTransform","up","marginRight","thead","display","alignItems","avatar","width","backgroundColor","green","txtCat","opacity","getTimezoneOffset","offset","Date","hourOffset","Math","abs","floor","minuteOffset","Reports","isMobile","useMediaQuery","useTheme","_useState","useState","getMonth","_useState2","D_Projects_TrueZie_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","month","setMonth","_useState3","getFullYear","_useState4","year","setYear","_useState5","_useState6","monthlyReport","setMonthlyReport","_useState7","_useState8","setTotal","_useState9","_useState10","message","setMessage","categoryHash","useContext","CategoryContext","auth","AuthContext","userId","receiptCount","_useHttpClient","useHttpClient","isLoading","error","success","sendRequest","clearError","clearSuccess","handleExportClick","D_Projects_TrueZie_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_Projects_TrueZie_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","endpoint","wrap","_context","prev","next","process","Authorization","token","userid","sent","code","t0","RollbarErrorTracking","logErrorInRollbar","stop","apply","this","arguments","useEffect","_ref2","_callee2","timezone","responseData","_total","_context2","receipts","reduce","b","amount","fetchMonthlyReport","react__WEBPACK_IMPORTED_MODULE_4___default","_shared_components_UIElements_ErrorBoundary__WEBPACK_IMPORTED_MODULE_27__","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_8__","xs","lg","_shared_components_UIElements_LoadingSpinner__WEBPACK_IMPORTED_MODULE_20__","asOverlay","_shared_components_UIElements_ErrorModal__WEBPACK_IMPORTED_MODULE_18__","onClear","_shared_components_UIElements_SuccessModal__WEBPACK_IMPORTED_MODULE_19__","successMessage","_shared_components_MainElements_DateSelector__WEBPACK_IMPORTED_MODULE_22__","e","_e$target$value$split","target","split","_e$target$value$split2","item","_shared_components_MainElements_Panel__WEBPACK_IMPORTED_MODULE_21__","_shared_components_MainElements_TotalExpense__WEBPACK_IMPORTED_MODULE_23__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_7__","onClick","_material_ui_core_TableContainer__WEBPACK_IMPORTED_MODULE_12__","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_10__","map","receipt","index","_id","date","category","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_13__","key","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_11__","component","scope","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","moment","format"],"mappings":"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","file":"static/js/8.7ca5e9c7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Paper from '@material-ui/core/paper';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    position: 'relative',\r\n    padding: '1rem',\r\n    height: ({ height }) => height,\r\n    borderRadius: '1rem'\r\n  },\r\n  title: {\r\n    fontSize: '0.8rem',\r\n    color: '#38cc89'\r\n  }\r\n});\r\n\r\nexport function Panel(props) {\r\n  const { height } = props;\r\n  const classes = useStyles({ height: height || '16rem' });\r\n  return (\r\n    <Paper className={classes.container}>\r\n      {props.title && <h4 className={classes.title}>{props.title}</h4>}\r\n      {props.children}\r\n    </Paper>\r\n  )\r\n}","import React from \"react\";\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    position: 'absolute',\r\n    top: props => `${props.top}`,\r\n    right: props => `${props.right}`,\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\nexport function DateSelector(props) {\r\n  const { top, right, value, onChange } = props;\r\n  const classes = useStyles({ top, right });\r\n\r\n  /* \r\n  As for the <options/> which scheme below we choose?\r\n  1. From Jan to Dec\r\n  2. Only months with receipts in the dbase\r\n  */\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      <Select value={value} onChange={onChange}>\r\n        <ListSubheader>2020</ListSubheader>\r\n        <MenuItem value=\"2020-7\">August</MenuItem>\r\n        <MenuItem value=\"2020-8\">September</MenuItem>\r\n        <ListSubheader>2019</ListSubheader>\r\n        <MenuItem value=\"2019-7\">August</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\n\r\n","import React from \"react\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  txtExpensesTotal: {\r\n    margin: '1rem 0',\r\n    fontSize: '2rem'\r\n  },\r\n  float: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: '10rem',\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      left: '5rem'\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function TotalExpense(props) {\r\n  const classes = useStyles();\r\n  const { total, float } = props;\r\n  return (\r\n    <p className={`${classes.txtExpensesTotal} ${float ? classes.float : ''}`}><sup>$</sup>{total.toLocaleString()}</p>\r\n  )\r\n}\r\n\r\n","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport moment from 'moment';\r\n\r\nimport { Avatar } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nimport CategoryContext from '../shared/context/category-context';\r\nimport { AuthContext } from '../shared/context/auth-context';\r\nimport { useHttpClient } from '../shared/hooks/http-hook';\r\nimport ErrorModal from '../shared/components/UIElements/ErrorModal';\r\nimport SuccessModal from '../shared/components/UIElements/SuccessModal';\r\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\r\n\r\nimport { Panel } from '../shared/components/MainElements/Panel';\r\nimport { DateSelector } from '../shared/components/MainElements/DateSelector';\r\nimport TotalExpense from '../shared/components/MainElements/TotalExpense';\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ErrorBoundary from '../shared/components/UIElements/ErrorBoundary';\r\nimport RollbarErrorTracking from '../helpers/RollbarErrorTracking';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pRel: {\r\n        position: 'relative',\r\n    },\r\n    container: {\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    button: {\r\n        position: 'absolute',\r\n        top: '1.5rem',\r\n        right: '0.5rem',\r\n        color: '#1b3460',\r\n        textTransform: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginRight: theme.spacing(1)\r\n        }\r\n    },\r\n    thead: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        marginRight: '1rem',\r\n        width: '1.5rem',\r\n        height: '1.5rem',\r\n        color: '#fff',\r\n        backgroundColor: green[500],\r\n    },\r\n    txtCat: {\r\n        color: 'grey',\r\n        opacity: '0.8',\r\n    },\r\n}));\r\n\r\n// Get timezone offset of the user's current location, format: +HHmm or -HHmm\r\n// Aware that in mongoDB the +/- is reversed from JavaScript\r\nconst getTimezoneOffset = () => {\r\n    const offset = new Date().getTimezoneOffset();\r\n    const hourOffset = Math.abs(Math.floor(offset / 60));\r\n    const minuteOffset = Math.abs(offset % 60);\r\n    const timezoneOffset = `${offset > 0 ? '-' : '+'}${\r\n        hourOffset > 9 ? hourOffset : '0' + hourOffset\r\n        }${minuteOffset > 9 ? minuteOffset : '0' + minuteOffset}`;\r\n    return timezoneOffset;\r\n};\r\n\r\nexport default function Reports(props) {\r\n    const classes = useStyles();\r\n    const isMobile = useMediaQuery(useTheme().breakpoints.down('xs'));\r\n\r\n    const [month, setMonth] = useState(new Date().getMonth()); // month starts from 0\r\n    const [year, setYear] = useState(new Date().getFullYear());\r\n    const [monthlyReport, setMonthlyReport] = useState([]);\r\n    const [total, setTotal] = useState(0);\r\n    const [message, setMessage] = useState('');\r\n\r\n    const categoryHash = useContext(CategoryContext);\r\n    const auth = useContext(AuthContext);\r\n    const userId = auth.userId;\r\n    const { receiptCount } = props;\r\n\r\n\r\n    const handleMonthYearChange = (e) => {\r\n        const [year, month] = e.target.value.split('-');\r\n        setYear(+year);\r\n        setMonth(+month);\r\n    };\r\n\r\n    const {\r\n        isLoading,\r\n        error,\r\n        success,\r\n        sendRequest,\r\n        clearError,\r\n        clearSuccess,\r\n    } = useHttpClient();\r\n\r\n    const handleExportClick = async () => {\r\n        try {\r\n            const endpoint = `${process.env.REACT_APP_API_BASE_URL}user/receipts/export/${month}`;\r\n            const responseData = await sendRequest(endpoint, 'GET', null, {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                userid: userId\r\n            });\r\n\r\n            if (responseData.code === 201) {\r\n                setMessage('A link to download report is sent to your registered email. Please check the junk & spam e-mails also.');\r\n            }\r\n\r\n        } catch (err) {\r\n            RollbarErrorTracking.logErrorInRollbar(err);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchMonthlyReport = async () => {\r\n            try {\r\n                const timezone = getTimezoneOffset();\r\n                const endpoint =\r\n                    process.env.REACT_APP_API_BASE_URL +\r\n                    `user/monthlyreport/${userId}&${year}&${month}&${timezone}`;\r\n                const responseData = await sendRequest(endpoint, 'GET', null, {\r\n                    Authorization: 'Bearer ' + auth.token,\r\n                });\r\n\r\n                const total = responseData.receipts.reduce(\r\n                    (a, b) => a + b.amount,\r\n                    0\r\n                );\r\n\r\n                setMonthlyReport(responseData.receipts);\r\n                setTotal(total);\r\n            } catch (err) {\r\n\r\n                RollbarErrorTracking.logErrorInRollbar(err);\r\n            }\r\n        };\r\n        fetchMonthlyReport();\r\n    }, [sendRequest, userId, auth.token, receiptCount, month, year]);\r\n\r\n    return (\r\n        <ErrorBoundary>\r\n            <Grid container spacing={3} xs={12} lg={10} className={classes.pRel}>\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n\r\n                <ErrorModal error={error} onClear={clearError} />\r\n                {message !== '' &&\r\n                    <SuccessModal\r\n                        success={success}\r\n                        successMessage={message}\r\n                        onClear={clearSuccess}\r\n                    />\r\n                }\r\n                <DateSelector\r\n                    top=\"-2.75rem\"\r\n                    right=\"0.5rem\"\r\n                    value={`${year}-${month}`}\r\n                    onChange={handleMonthYearChange}\r\n                />\r\n                <Grid item xs>\r\n                    <Panel title={`TOTAL${isMobile ? '' : ' EXPENSES'}`} height=\"auto\">\r\n                        <TotalExpense total={total} float />\r\n                        <Button className={classes.button} onClick={handleExportClick}>\r\n                            Export CSV\r\n                        </Button>\r\n                        <TableContainer>\r\n                            <Table className={classes.container}>\r\n                                <TableBody>\r\n                                    {monthlyReport.map((receipt, index) => {\r\n                                        const { _id, title, amount, date } = receipt;\r\n                                        const category = receipt.category || 'Other';\r\n                                        return (\r\n                                            <TableRow key={index + ' ' + _id}>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    <div className={classes.thead}>\r\n                                                        <Avatar className={classes.avatar}>\r\n                                                            {categoryHash[category]}\r\n                                                        </Avatar>\r\n                                                        {title}\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell>{`-$${amount.toLocaleString()}`}</TableCell>\r\n                                                <TableCell>\r\n                                                    {moment(date).format('MMMM Do, YYYY')}\r\n                                                </TableCell>\r\n                                                <TableCell className={classes.txtCat}>\r\n                                                    {category}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        )\r\n                                    })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Panel>\r\n                </Grid>\r\n            </Grid>\r\n        </ErrorBoundary>\r\n    );\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["shared/components/MainElements/Panel.js","shared/components/MainElements/DateSelector.js","shared/components/MainElements/TotalExpense.js","shared/components/MainElements/Chart.js","shared/components/MainElements/TopCategories.js","shared/components/MainElements/RecentTransactions.js","pages/Dashboard.js"],"names":["__webpack_require__","d","__webpack_exports__","Panel","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_paper__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_2__","useStyles","makeStyles","container","position","padding","height","_ref","borderRadius","title","fontSize","color","props","classes","a","createElement","className","children","DateSelector","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Select__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_ListSubheader__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_5__","theme","formControl","top","concat","right","margin","spacing","minWidth","textAlign","value","onChange","txtExpensesTotal","float","Object","D_Projects_TrueZie_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","left","breakpoints","down","TotalExpense","total","react__WEBPACK_IMPORTED_MODULE_1___default","toLocaleString","months","formatter","_len","arguments","length","params","Array","_key","initChart","month","year","date","Date","numOfDays","getDate","today","dateToday","toDateString","slice","thisMonth","getMonth","thisYear","getFullYear","currentConfig","id","condition","reference","find","config","receipts","_id","push","Function","Chart","data","_initChart","getReceipt","source","ref","receipt","_useState","useState","_useState2","slicedToArray","monthlyReceipts","setMonthlyReceipts","_useState3","_useState4","latestValue","setlatestValue","useEffect","map","react_default","es6","debounce","dataKey","interval","axisLine","stroke","strokeWidth","tickLine","type","dot","activeDot","r","x","y","isFront","fill","separator","whiteSpace","thead","display","alignItems","avatar","marginRight","width","backgroundColor","green","TopCategories","categoryHash","useContext","CategoryContext","auth","AuthContext","sendRequest","useHttpClient","userId","loadedCategories","setloadedCategories","asyncToGenerator","regenerator_default","mark","_callee","endpoint","responseData","wrap","_context","prev","next","process","Authorization","token","sent","results","t0","RollbarErrorTracking","logErrorInRollbar","stop","apply","this","fetchTopCategories","receiptCount","TableContainer","Table","TableBody","index","TableRow","key","TableCell","component","scope","Avatar","txtCat","opacity","RecentTransactions","loadedReceipts","setloadedReceipts","transactions","fetchTransactions","amount","category","moment","format","Dashboard","setMonth","setYear","_useState5","_useState6","_useState7","_useState8","setTotal","isMobile","useMediaQuery","useTheme","getTimezoneOffset","offset","hourOffset","Math","abs","floor","minuteOffset","timezone","dataToDateString","_total","validDate","objectSpread","reduce","b","fetchMonthlyTransactions","Fragment","ErrorBoundary","Grid","xs","lg","item","md","e","_e$target$value$split","target","split","_e$target$value$split2","MainElements_RecentTransactions"],"mappings":"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","file":"static/js/7.bea72a1b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Paper from '@material-ui/core/paper';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    position: 'relative',\r\n    padding: '1rem',\r\n    height: ({ height }) => height,\r\n    borderRadius: '1rem'\r\n  },\r\n  title: {\r\n    fontSize: '0.8rem',\r\n    color: '#38cc89'\r\n  }\r\n});\r\n\r\nexport function Panel(props) {\r\n  const { height } = props;\r\n  const classes = useStyles({ height: height || '16rem' });\r\n  return (\r\n    <Paper className={classes.container}>\r\n      {props.title && <h4 className={classes.title}>{props.title}</h4>}\r\n      {props.children}\r\n    </Paper>\r\n  )\r\n}","import React from \"react\";\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    position: 'absolute',\r\n    top: props => `${props.top}`,\r\n    right: props => `${props.right}`,\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\nexport function DateSelector(props) {\r\n  const { top, right, value, onChange } = props;\r\n  const classes = useStyles({ top, right });\r\n\r\n  /* \r\n  As for the <options/> which scheme below we choose?\r\n  1. From Jan to Dec\r\n  2. Only months with receipts in the dbase\r\n  */\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      <Select value={value} onChange={onChange}>\r\n        <ListSubheader>2020</ListSubheader>\r\n        <MenuItem value=\"2020-7\">August</MenuItem>\r\n        <MenuItem value=\"2020-8\">September</MenuItem>\r\n        <ListSubheader>2019</ListSubheader>\r\n        <MenuItem value=\"2019-7\">August</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\n\r\n","import React from \"react\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  txtExpensesTotal: {\r\n    margin: '1rem 0',\r\n    fontSize: '2rem'\r\n  },\r\n  float: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: '10rem',\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      left: '5rem'\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function TotalExpense(props) {\r\n  const classes = useStyles();\r\n  const { total, float } = props;\r\n  return (\r\n    <p className={`${classes.txtExpensesTotal} ${float ? classes.float : ''}`}><sup>$</sup>{total.toLocaleString()}</p>\r\n  )\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { LineChart, Line, XAxis, Tooltip, ResponsiveContainer, ReferenceLine, ReferenceDot } from 'recharts';\r\n\r\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\nconst formatter = (value, ...params) => [`$${value.toLocaleString()}`, ...params];\r\n\r\nconst initChart = (month, year) => {\r\n  const date = new Date();\r\n  const numOfDays = new Date(year, month + 1, 0).getDate();\r\n  const today = date.getDate();\r\n  const dateToday = new Date().toDateString().slice(4, 10);\r\n  const thisMonth = date.getMonth();\r\n  const thisYear = date.getFullYear();\r\n\r\n  // Future: data end at 1st day, reference at 1st day\r\n  // Current: data end at today, reference at today\r\n  // Past: data end at the last day, reference at the last day\r\n  const chartConfig = [\r\n    {\r\n      id: 'current_month',\r\n      condition: month === thisMonth && year === thisYear,\r\n      total: d => d <= today ? 0 : null,\r\n      reference: dateToday\r\n    },\r\n    {\r\n      id: 'past_months',\r\n      condition: year < thisYear || (year === thisYear && month < thisMonth),\r\n      total: 0,\r\n      reference: `${months[month]} ${numOfDays}`\r\n    },\r\n    {\r\n      id: 'future_months',\r\n      condition: year > thisYear || (year === thisYear && month > thisMonth),\r\n      total: null,\r\n      reference: `${months[month]} 01`\r\n    }\r\n  ];\r\n\r\n  const currentConfig = chartConfig.find(config => config.condition);\r\n  const { total, reference } = currentConfig;\r\n  const receipts = [{ _id: `${months[month]} 01`, total: 0 }];\r\n\r\n  for (let d = 2; d <= numOfDays; d++) {\r\n    receipts.push({\r\n      _id: `${months[month]} ${d > 9 ? '' : '0'}${d}`,\r\n      total: total instanceof Function ? total(d) : total\r\n    });\r\n  }\r\n\r\n  return { receipts, reference };\r\n}\r\n\r\nexport function Chart(props) {\r\n  const { data, year, month } = props;\r\n  const { receipts, reference } = initChart(month, year);\r\n\r\n  const getReceipt = (source, ref) => source.find(receipt => receipt._id === ref);\r\n\r\n  const [monthlyReceipts, setMonthlyReceipts] = useState(receipts);\r\n  const [latestValue, setlatestValue] = useState(getReceipt(receipts, reference).total);\r\n\r\n  useEffect(() => {\r\n    setMonthlyReceipts(receipts => {\r\n      const mergedReceipts = receipts.map(receipt => {\r\n        return getReceipt(data, receipt._id) || receipt;\r\n      });\r\n      return mergedReceipts;\r\n    });\r\n  }, [data])\r\n\r\n  useEffect(() => {\r\n    setMonthlyReceipts(receipts);\r\n  }, [month, year])\r\n\r\n  useEffect(() => {\r\n    const latestValue = getReceipt(monthlyReceipts, reference).total;\r\n    setlatestValue(latestValue);\r\n  }, [monthlyReceipts])\r\n\r\n  return (\r\n    <ResponsiveContainer height={120} debounce={100}>\r\n      <LineChart data={monthlyReceipts}>\r\n        <XAxis\r\n          dataKey=\"_id\"\r\n          interval=\"preserveStartEnd\"\r\n          axisLine={{ stroke: \"#f0f2fa\", strokeWidth: 2 }}\r\n          tickLine={false}\r\n          padding={{ left: 20, right: 20 }}\r\n        />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"total\"\r\n          stroke=\"#4366a7\"\r\n          strokeWidth={2}\r\n          dot={false}\r\n          activeDot={{ stroke: '#fff', strokeWidth: 3, r: 6 }}\r\n        />\r\n        <ReferenceLine x={reference} stroke=\"#f0f2fa\" />\r\n        <ReferenceDot\r\n          x={reference}\r\n          y={latestValue}\r\n          r={5}\r\n          isFront\r\n          fill=\"#38cc89\"\r\n          stroke=\"none\"\r\n        />\r\n        <Tooltip separator=\": \" formatter={formatter} />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  )\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nimport CategoryContext from '../../context/category-context';\r\nimport { AuthContext } from '../../context/auth-context';\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\nimport RollbarErrorTracking from '../../../helpers/RollbarErrorTracking';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    whiteSpace: 'nowrap'\r\n  },\r\n  thead: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: '1rem',\r\n    width: '1.5rem',\r\n    height: '1.5rem',\r\n    color: '#fff',\r\n    backgroundColor: green[500],\r\n  },\r\n})\r\n\r\n// May merge all Tables into one Template\r\nexport default function TopCategories(props) {\r\n  const classes = useStyles();\r\n\r\n  const categoryHash = useContext(CategoryContext);\r\n  const auth = useContext(AuthContext);\r\n  const {\r\n    sendRequest,\r\n  } = useHttpClient();\r\n  const userId = auth.userId;\r\n  const [loadedCategories, setloadedCategories] = useState([]);\r\n\r\n  // Fetch recent transations\r\n  useEffect(() => {\r\n    const fetchTopCategories = async () => {\r\n      try {\r\n        // API call\r\n        const endpoint =\r\n          process.env.REACT_APP_API_BASE_URL +\r\n          `user/topcategories/${userId}`;\r\n        const responseData = await sendRequest(endpoint, 'GET', null, {\r\n          Authorization: 'Bearer ' + auth.token,\r\n        });\r\n        setloadedCategories(responseData.results.receipts); // set the transactions data\r\n      } catch (err) {\r\n\r\n        RollbarErrorTracking.logErrorInRollbar(err);\r\n      }\r\n    };\r\n    fetchTopCategories();\r\n  }, [sendRequest, userId, auth.token, props.receiptCount]);\r\n  return (\r\n    <TableContainer>\r\n      <Table className={classes.container}>\r\n        <TableBody>\r\n          {loadedCategories.map((receipt, index) => {\r\n            const { total } = receipt;\r\n            const _id = receipt._id || 'Other';\r\n            return (\r\n              <TableRow key={index + ' ' + _id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <div className={classes.thead}>\r\n                    <Avatar className={classes.avatar}>\r\n                      {categoryHash[_id]}\r\n                    </Avatar>\r\n                    {_id}\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>{`-$${total.toLocaleString()}`}</TableCell>\r\n              </TableRow>\r\n            )\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport { Avatar } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\n\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nimport CategoryContext from '../../context/category-context';\r\nimport { AuthContext } from '../../context/auth-context';\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\nimport RollbarErrorTracking from '../../../helpers/RollbarErrorTracking';\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    thead: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        marginRight: '1rem',\r\n        width: '2rem',\r\n        height: '2rem',\r\n        color: '#fff',\r\n        backgroundColor: green[500],\r\n    },\r\n    txtCat: {\r\n        color: 'grey',\r\n        opacity: '0.8',\r\n    },\r\n});\r\n\r\nconst RecentTransactions = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const categoryHash = useContext(CategoryContext);\r\n    const auth = useContext(AuthContext);\r\n    const {\r\n        sendRequest,\r\n    } = useHttpClient();\r\n    const userId = auth.userId;\r\n    const [loadedReceipts, setloadedReceipts] = useState([]);\r\n\r\n    // Fetch recent transations\r\n    useEffect(() => {\r\n        const fetchTransactions = async () => {\r\n            try {\r\n                // API call\r\n                const endpoint =\r\n                    process.env.REACT_APP_API_BASE_URL +\r\n                    `user/recenttransactions/${userId}`;\r\n                const responseData = await sendRequest(endpoint, 'GET', null, {\r\n                    Authorization: 'Bearer ' + auth.token,\r\n                });\r\n\r\n                setloadedReceipts(responseData.results.transactions); // set the transactions data\r\n                // props.onReceiptUpload();\r\n            } catch (err) { RollbarErrorTracking.logErrorInRollbar(err); }\r\n        };\r\n        fetchTransactions();\r\n    }, [sendRequest, userId, auth.token, props.receiptCount]);\r\n\r\n    return (\r\n        <TableContainer>\r\n            <Table className={classes.container}>\r\n                <TableBody>\r\n                    {loadedReceipts.map((receipt, index) => {\r\n                        const { _id, title, amount, date } = receipt;\r\n                        const category = receipt.category || 'Other';\r\n                        return (\r\n                            <TableRow key={index + ' ' + _id}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    <div className={classes.thead}>\r\n                                        <Avatar className={classes.avatar}>\r\n                                            {categoryHash[category]}\r\n                                        </Avatar>\r\n                                        {title}\r\n                                    </div>\r\n                                </TableCell>\r\n                                <TableCell>{`-$${amount.toLocaleString()}`}</TableCell>\r\n                                <TableCell>\r\n                                    {moment(date).format('MMMM Do, YYYY')}\r\n                                </TableCell>\r\n                                <TableCell className={classes.txtCat}>\r\n                                    {category}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )\r\n                    })}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\nexport default RecentTransactions;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Panel } from '../shared/components/MainElements/Panel';\r\nimport { Chart } from '../shared/components/MainElements/Chart';\r\nimport TopCategories from '../shared/components/MainElements/TopCategories';\r\nimport RecentTransactions from '../shared/components/MainElements/RecentTransactions';\r\nimport { DateSelector } from '../shared/components/MainElements/DateSelector';\r\nimport { AuthContext } from '../shared/context/auth-context';\r\nimport { useHttpClient } from '../shared/hooks/http-hook';\r\nimport ErrorBoundary from '../shared/components/UIElements/ErrorBoundary';\r\nimport RollbarErrorTracking from '../helpers/RollbarErrorTracking';\r\n\r\nimport TotalExpense from '../shared/components/MainElements/TotalExpense';\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nexport default function Dashboard(props) {\r\n  const [month, setMonth] = useState(new Date().getMonth()); // month starts from 0\r\n  const [year, setYear] = useState(new Date().getFullYear());\r\n  const [monthlyReceipts, setMonthlyReceipts] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const auth = useContext(AuthContext);\r\n  const { sendRequest } = useHttpClient();\r\n  const userId = auth.userId;\r\n  const { receiptCount } = props;\r\n\r\n  const isMobile = useMediaQuery(useTheme().breakpoints.down('xs'));\r\n\r\n  const handleMonthYearChange = e => {\r\n    const [year, month] = e.target.value.split('-');\r\n    setYear(+year);\r\n    setMonth(+month);\r\n  };\r\n\r\n  // Get timezone offset of the user's current location, format: +HHmm or -HHmm\r\n  // Aware that in mongoDB the +/- is reversed from JavaScript\r\n  const getTimezoneOffset = () => {\r\n    const offset = new Date().getTimezoneOffset();\r\n    const hourOffset = Math.abs(Math.floor(offset / 60));\r\n    const minuteOffset = Math.abs(offset % 60);\r\n    const timezoneOffset = `${offset > 0 ? '-' : '+'}${hourOffset > 9 ? hourOffset : '0' + hourOffset}${minuteOffset > 9 ? minuteOffset : '0' + minuteOffset}`;\r\n    return timezoneOffset;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchMonthlyTransactions = async () => {\r\n      try {\r\n        const timezone = getTimezoneOffset();\r\n        const endpoint = `${process.env.REACT_APP_API_BASE_URL}user/monthlytransactions/${userId}&${year}&${month}&${timezone}`;\r\n        const responseData = await sendRequest(\r\n          endpoint,\r\n          'GET',\r\n          null,\r\n          { Authorization: 'Bearer ' + auth.token }\r\n        );\r\n\r\n        const { receipts } = responseData;\r\n\r\n        // 'Mon Jan 01 2020' => 'Jan 01'\r\n        const dataToDateString = receipts.map(receipt => {\r\n          const date = new Date(receipt._id);\r\n          const validDate = date.toDateString();\r\n          return { ...receipt, _id: validDate.slice(4, 10) };\r\n        });\r\n        const total = receipts.reduce((a, b) => a + b.total, 0);\r\n\r\n        setTotal(total);\r\n        setMonthlyReceipts(dataToDateString);\r\n      } catch(err) {\r\n        RollbarErrorTracking.logErrorInRollbar(err);\r\n      }\r\n    };\r\n    fetchMonthlyTransactions();\r\n  }, [sendRequest, userId, auth.token, year, month, receiptCount])\r\n\r\n  return (\r\n    <>\r\n     <ErrorBoundary>\r\n      <Grid container spacing={3} xs={12} lg={10}>\r\n        <Grid item xs={12} md={6}>\r\n          <Panel title={`TOTAL${isMobile ? '' : ' EXPENSES'}`}>\r\n            <DateSelector\r\n              top=\"1rem\"\r\n              right=\"0.5rem\"\r\n              value={`${year}-${month}`}\r\n              onChange={handleMonthYearChange}\r\n            />\r\n            <TotalExpense total={total} />\r\n            <Chart year={year} month={month} data={monthlyReceipts} />\r\n          </Panel>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Panel title=\"TOP CATEGORIES\">\r\n            <ErrorBoundary>\r\n            <TopCategories receiptCount={receiptCount} />\r\n            </ErrorBoundary>\r\n          </Panel>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3} xs={12} lg={10}>\r\n        <Grid item xs={12}>\r\n          <h3>Recent Transactions</h3>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3} xs={12} lg={10}>\r\n        <Grid item xs={12}>\r\n          <Panel>\r\n            {/* <RecentTransactions reloadTrans={setReloadTransactions}/> */}\r\n            <ErrorBoundary>\r\n            <RecentTransactions receiptCount={receiptCount} />\r\n            </ErrorBoundary>\r\n          </Panel>\r\n        </Grid>\r\n      </Grid>\r\n      </ErrorBoundary>\r\n     \r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}